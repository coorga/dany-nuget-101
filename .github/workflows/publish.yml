name: 🧱 Build & Publish NuGet Packages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  buildConfiguration: Release
  artifactsFolder: ./artifacts
  version: 1.0.${{ github.run_number }}
  nugetFeedGitHub: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧩 Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: 🧹 Clean artifacts folder
        shell: pwsh
        run: |
          if (Test-Path $env:artifactsFolder) { Remove-Item $env:artifactsFolder -Recurse -Force }
          New-Item -ItemType Directory -Force -Path $env:artifactsFolder | Out-Null

      - name: 🏗️ Build, Pack & Push Projects
        shell: pwsh
        env:
          NUGET_API_KEY: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $buildProps = @(
            "-p:ContinuousIntegrationBuild=true",
            "-p:Deterministic=true",
            "-p:EmbedUntrackedSources=true",
            "-p:RepositoryBranch=${{ github.ref_name }}",
            "-p:RepositoryCommit=${{ github.sha }}"
          ) -join " "

          function BuildAndPack {
            param([string]$projectPath)
            $name = [System.IO.Path]::GetFileNameWithoutExtension($projectPath)
            Write-Host "##[section]🧱 Building and Packing: $name"

            dotnet restore $projectPath --no-cache --force
            dotnet build $projectPath --configuration $env:buildConfiguration --no-restore $buildProps
            dotnet pack $projectPath --configuration $env:buildConfiguration --no-build -p:PackageVersion=$env:version -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg -o $env:artifactsFolder $buildProps
          }

          function PushPackage {
            param([string]$packagePath)
            $pkg = [System.IO.Path]::GetFileName($packagePath)
            Write-Host "##[section]🚀 Pushing: $pkg"
            dotnet nuget push $packagePath --source $env:nugetFeedGitHub --api-key $env:NUGET_API_KEY --skip-duplicate
          }
          
          Get-ChildItem -Recurse -Filter "*.csproj" | ForEach-Object {
            BuildAndPack $_.FullName
          }

          Get-ChildItem $env:artifactsFolder -Filter "*.nupkg" -Exclude "*.snupkg" | ForEach-Object { PushPackage $_.FullName }
          Get-ChildItem $env:artifactsFolder -Filter "*.snupkg" | ForEach-Object { PushPackage $_.FullName }

      - name: 📦 Upload NuGet artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages-${{ env.version }}
          path: ${{ env:artifactsFolder }}
          retention-days: 30
